{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","AppReducer","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","arr","useContext","map","item","amount","reduce","total","num","toFixed","IncomeExpenses","className","getExpense","Transaction","sign","colHighlight","absAmount","Math","abs","text","onClick","TransactionList","length","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","uuidv4","console","log","htmlFor","onChange","target","placeholder","App","showAdd","setShowAdd","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af2ee977.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <h2>Expense Tracker</h2>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","const AppReducer = (state, action ) => {\r\n    switch(action.type) {\r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\r\n            }\r\n        case 'ADD_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: [action.payload, ...state.transactions]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default AppReducer","import React, { createContext, useReducer } from \"react\";\r\nimport AppReducer from './AppReducer';\r\n\r\n\r\n// Initial State\r\nconst initialState = {\r\n    transactions: []\r\n}\r\n\r\n// Create Context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider Component\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    // Actions\r\n    function deleteTransaction(id) {\r\n        dispatch({\r\n            type: 'DELETE_TRANSACTION',\r\n            payload: id\r\n        });\r\n    }\r\n\r\n    function addTransaction(transaction) {\r\n        dispatch({\r\n            type: 'ADD_TRANSACTION',\r\n            payload: transaction\r\n        });\r\n    }\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            transactions: state.transactions,\r\n            deleteTransaction,\r\n            addTransaction\r\n        }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    );\r\n}","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst Balance = () => {\r\n\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n    function getSum(arr) {\r\n        let amountsArr = arr.map(item => item.amount);\r\n        let sum = amountsArr.reduce((total, num) => {return total + num}, 0).toFixed(2);\r\n\r\n        return sum\r\n    }\r\n\r\n    return (\r\n        <>\r\n           <h4>Your Balance</h4>\r\n           <h1>£{transactions ? getSum(transactions) : \"0.00\"}</h1> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Balance\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\n\r\n\r\nconst IncomeExpenses = () => {\r\n\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n    // Calculate Totals\r\n    function getIncome(arr) {\r\n        let amountsArr = arr.map(item => item.amount);\r\n        let incomeArr = amountsArr.filter(amount => amount > 0);\r\n        let netIncome = incomeArr.reduce((total, num) => {return total + num}, 0).toFixed(2);\r\n\r\n        return netIncome\r\n    }\r\n    function getExpense(arr) {\r\n        let amountsArr = arr.map(item => item.amount);\r\n        let expenseArr = amountsArr.filter(amount => amount < 0);\r\n        let netExpense = expenseArr.reduce((total, num) => {return total + num}, 0).toFixed(2);\r\n        \r\n        return netExpense\r\n    }\r\n\r\n    return (\r\n        <div className=\"inc-exp-container\">\r\n            <div>\r\n                <h4>Income</h4>\r\n                <p className=\"money plus\">{getIncome(transactions)}</p>\r\n            </div>\r\n            <div>\r\n                <h4>Expenses</h4>\r\n                <p className=\"money minus\">{getExpense(transactions)}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IncomeExpenses\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst Transaction = ({ transaction }) => {\r\n    \r\n    const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n    const sign = transaction.amount < 0 ? '-': '+';\r\n    const colHighlight = transaction.amount < 0 ? \"minus\" : \"plus\";\r\n    const absAmount = Math.abs(transaction.amount);\r\n\r\n    return (\r\n        <li className={colHighlight}>\r\n            {transaction.text}\r\n            <span>{sign}£{absAmount}</span>\r\n            <button className=\"delete-btn\"\r\n                onClick={() => deleteTransaction(transaction.id)}\r\n            >X\r\n            </button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Transaction\r\n","import React, { useContext } from 'react';\r\nimport Transaction from './Transaction';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst TransactionList = () => {\r\n\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <>\r\n            <h3>History</h3>\r\n            <ul className={`list ${transactions.length === 0 ? 'no-scroll' : ''}`}>\r\n                { transactions.length !== 0 ? \r\n                    transactions.map(transaction => (\r\n                        <Transaction key={transaction.id} transaction={transaction} />\r\n                    )) \r\n                : 'No transactions to show'}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TransactionList\r\n","import React, { useState, useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst AddTransaction = () => {\r\n\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n\r\n    const { addTransaction } = useContext(GlobalContext);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const newTransaction = {\r\n            id: uuidv4(),\r\n            text: text,\r\n            amount: +amount\r\n        }\r\n\r\n        addTransaction(newTransaction);\r\n        console.log(e)\r\n    };\r\n\r\n\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <div className=\"form-control\">\r\n                <label htmlFor=\"text\">Text</label>\r\n                <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter text...\" />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                <label htmlFor=\"amount\"\r\n                    >Amount <br />\r\n                    (negative - expense, positive - income)</label\r\n                >\r\n                <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} placeholder=\"Enter amount...\" />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn\">Add transaction</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTransaction\r\n","import './App.css';\nimport React, { useState } from 'react';\nimport Header from './components/Header';\nimport Balance from './components/Balance';\nimport IncomeExpenses from './components/IncomeExpenses';\nimport TransactionList from './components/TransactionList';\nimport AddTransaction from './components/AddTransaction';\n\nimport { GlobalProvider } from './context/GlobalState';\n\nfunction App() {\n\n  const [showAdd, setShowAdd] = useState(false);\n\n  return (\n    <GlobalProvider>\n      <div className=\"container\">\n        <Header />\n        <div className=\"sub-container\">\n          <Balance />\n          <IncomeExpenses />\n          <TransactionList />\n          <h3 className=\"header-span\">\n                Add new transaction\n                <button className=\"btn inline\" \n                  onClick={() => setShowAdd(!showAdd)}>\n                  {showAdd ? '∧' : '∨'}\n                </button>\n            </h3>\n          { showAdd && <AddTransaction />}\n        </div>\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}